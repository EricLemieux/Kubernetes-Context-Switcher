#!/usr/bin/env python3

import subprocess
import sys


def eprint(*args, **kwargs):
    """
    Print message to stderr.
    """
    print(*args, file=sys.stderr, **kwargs)


def get_contexts() -> list[str]:
    """
    Get a list of the available kubernetes contexts.
    """

    res = subprocess.check_output(["kubectl", "config", "get-contexts", "--output", "name"])
    return res.decode("utf-8").strip().splitlines()


def use_context(context: str):
    """
    Configure kubernetes to use the provided context.
    """

    subprocess.run(["kubectl", "config", "use-context", context])


if __name__ == "__main__":
    # Get available contexts
    contexts = get_contexts()

    # List the contexts to the user
    print("Select kubernetes context:")
    for i in range(len(contexts)):
        print(f"{i} - {contexts[i]}")

    # User picks the context
    user_selection = input("Select context: ").strip()
    selected_index = 0
    try:
        selected_index = int(user_selection)
    except ValueError:
        eprint(f"The entered input is invalid")
        exit(1)
    if selected_index < 0 or selected_index > len(contexts)-1:
        eprint(f"The selected index {selected_index} is invalid")
        exit(1)
    selected_context = contexts[selected_index]

    # Set the context
    use_context(selected_context)
